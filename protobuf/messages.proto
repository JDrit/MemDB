package messages;
// Data Type stuff

enum Error {
    NO_ERROR    = 1;
    NO_VALUE    = 2;
    KEY_IN_USE  = 3;
    WRONG_TYPE  = 4;
    EMPTY       = 5;
    WRONG_VALUE = 6;
}

message Value {
    oneof value {
        string stringValue = 1;
        int32 intValue     = 2;
    }
}

// Basis operations

message GetRequest {
    required string key = 1;
}

message GetResponse {
    required string key  = 1;
    oneof result {
        Value value = 2;
        Error error = 3;
    }
}

message PutRequest {
    required string key  = 1;
    required Value value = 2;
}

message PutResponse {
    required string key  = 1;
    optional Error error = 2;
}

message RemoveRequest {
    required string key = 1;
}

message RemoveResponse {
    required string key  = 1;
    optional Error error = 2;
}

// Stack operations

message InitStackRequest {
    required string key = 1;
}

message InitStackResponse {
    required string key  = 1;
    optional Error error = 2;
}

message PushRequest {
    required string key  = 1;
    required Value value = 2;
}

message PushResponse {
    required string key  = 1;
    optional Error error = 2;
}

message PopRequest {
    required string key = 1;
}

message PopResponse {
    required string key  = 1;
    oneof result {
        Value value = 2;
        Error error = 3;
    }
}

// Queue operations

message InitQueueRequest {
    required string key = 1;
}

message InitQueueResponse {
    required string key  = 1;
    optional Error error = 2;
}

message EnqueueRequest {
    required string key  = 1;
    required Value value = 2;
}

message EnqueueResponse {
    required string key  = 1;
    optional Error error = 2;
}

message DequeueRequest {
    required string key = 1;
}

message DequeueResponse {
    required string key  = 1;
    oneof result {
        Value value = 2;
        Error error = 3;
    }
}

// Stack + Queue operations

message PeekRequest {
    required string key = 1;
}

message PeekResponse {
    required string key  = 1;
    oneof result {
        Value value = 2;
        Error error = 3;
    }
}

message SizeRequest {
    required string key = 1;
}

message SizeResponse {
    required string key  = 1;
    oneof result {
        int32 size  = 2;
        Error error = 3;
    }
}

service DatabaseService {
    rpc Get     (GetRequest)     returns (GetResponse);
    rpc Put     (PutRequest)     returns (PutResponse);
    rpc Remove  (RemoveRequest)  returns (RemoveResponse);
    rpc Push    (PushRequest)    returns (PushResponse);
    rpc Pop     (PopRequest)     returns (PopResponse);
    rpc Enqueue (EnqueueRequest) returns (EnqueueResponse);
    rpc Dequeue (DequeueRequest) returns (DequeueResponse);
    rpc Peek    (PeekRequest)    returns (PeekResponse);
    rpc Size    (SizeRequest)    returns (SizeResponse);
}
