/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages.proto */

#ifndef PROTOBUF_C_messages_2eproto__INCLUDED
#define PROTOBUF_C_messages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Messages__GetRequest Messages__GetRequest;
typedef struct _Messages__GetResponse Messages__GetResponse;
typedef struct _Messages__PutRequest Messages__PutRequest;
typedef struct _Messages__PutResponse Messages__PutResponse;
typedef struct _Messages__ClientRequest Messages__ClientRequest;
typedef struct _Messages__ClientResponse Messages__ClientResponse;


/* --- enums --- */

typedef enum _Messages__Type {
  MESSAGES__TYPE__GET = 1,
  MESSAGES__TYPE__PUT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MESSAGES__TYPE)
} Messages__Type;

/* --- messages --- */

struct  _Messages__GetRequest
{
  ProtobufCMessage base;
  char *key;
};
#define MESSAGES__GET_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__get_request__descriptor) \
    , NULL }


struct  _Messages__GetResponse
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define MESSAGES__GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__get_response__descriptor) \
    , NULL, NULL }


struct  _Messages__PutRequest
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define MESSAGES__PUT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__put_request__descriptor) \
    , NULL, NULL }


struct  _Messages__PutResponse
{
  ProtobufCMessage base;
  char *key;
  protobuf_c_boolean success;
};
#define MESSAGES__PUT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__put_response__descriptor) \
    , NULL, 0 }


struct  _Messages__ClientRequest
{
  ProtobufCMessage base;
  Messages__Type type;
  Messages__GetRequest *get;
  Messages__PutRequest *put;
};
#define MESSAGES__CLIENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__client_request__descriptor) \
    , 0, NULL, NULL }


struct  _Messages__ClientResponse
{
  ProtobufCMessage base;
  Messages__Type type;
  Messages__GetResponse *get;
  Messages__PutResponse *put;
};
#define MESSAGES__CLIENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__client_response__descriptor) \
    , 0, NULL, NULL }


/* Messages__GetRequest methods */
void   messages__get_request__init
                     (Messages__GetRequest         *message);
size_t messages__get_request__get_packed_size
                     (const Messages__GetRequest   *message);
size_t messages__get_request__pack
                     (const Messages__GetRequest   *message,
                      uint8_t             *out);
size_t messages__get_request__pack_to_buffer
                     (const Messages__GetRequest   *message,
                      ProtobufCBuffer     *buffer);
Messages__GetRequest *
       messages__get_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__get_request__free_unpacked
                     (Messages__GetRequest *message,
                      ProtobufCAllocator *allocator);
/* Messages__GetResponse methods */
void   messages__get_response__init
                     (Messages__GetResponse         *message);
size_t messages__get_response__get_packed_size
                     (const Messages__GetResponse   *message);
size_t messages__get_response__pack
                     (const Messages__GetResponse   *message,
                      uint8_t             *out);
size_t messages__get_response__pack_to_buffer
                     (const Messages__GetResponse   *message,
                      ProtobufCBuffer     *buffer);
Messages__GetResponse *
       messages__get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__get_response__free_unpacked
                     (Messages__GetResponse *message,
                      ProtobufCAllocator *allocator);
/* Messages__PutRequest methods */
void   messages__put_request__init
                     (Messages__PutRequest         *message);
size_t messages__put_request__get_packed_size
                     (const Messages__PutRequest   *message);
size_t messages__put_request__pack
                     (const Messages__PutRequest   *message,
                      uint8_t             *out);
size_t messages__put_request__pack_to_buffer
                     (const Messages__PutRequest   *message,
                      ProtobufCBuffer     *buffer);
Messages__PutRequest *
       messages__put_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__put_request__free_unpacked
                     (Messages__PutRequest *message,
                      ProtobufCAllocator *allocator);
/* Messages__PutResponse methods */
void   messages__put_response__init
                     (Messages__PutResponse         *message);
size_t messages__put_response__get_packed_size
                     (const Messages__PutResponse   *message);
size_t messages__put_response__pack
                     (const Messages__PutResponse   *message,
                      uint8_t             *out);
size_t messages__put_response__pack_to_buffer
                     (const Messages__PutResponse   *message,
                      ProtobufCBuffer     *buffer);
Messages__PutResponse *
       messages__put_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__put_response__free_unpacked
                     (Messages__PutResponse *message,
                      ProtobufCAllocator *allocator);
/* Messages__ClientRequest methods */
void   messages__client_request__init
                     (Messages__ClientRequest         *message);
size_t messages__client_request__get_packed_size
                     (const Messages__ClientRequest   *message);
size_t messages__client_request__pack
                     (const Messages__ClientRequest   *message,
                      uint8_t             *out);
size_t messages__client_request__pack_to_buffer
                     (const Messages__ClientRequest   *message,
                      ProtobufCBuffer     *buffer);
Messages__ClientRequest *
       messages__client_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__client_request__free_unpacked
                     (Messages__ClientRequest *message,
                      ProtobufCAllocator *allocator);
/* Messages__ClientResponse methods */
void   messages__client_response__init
                     (Messages__ClientResponse         *message);
size_t messages__client_response__get_packed_size
                     (const Messages__ClientResponse   *message);
size_t messages__client_response__pack
                     (const Messages__ClientResponse   *message,
                      uint8_t             *out);
size_t messages__client_response__pack_to_buffer
                     (const Messages__ClientResponse   *message,
                      ProtobufCBuffer     *buffer);
Messages__ClientResponse *
       messages__client_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__client_response__free_unpacked
                     (Messages__ClientResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Messages__GetRequest_Closure)
                 (const Messages__GetRequest *message,
                  void *closure_data);
typedef void (*Messages__GetResponse_Closure)
                 (const Messages__GetResponse *message,
                  void *closure_data);
typedef void (*Messages__PutRequest_Closure)
                 (const Messages__PutRequest *message,
                  void *closure_data);
typedef void (*Messages__PutResponse_Closure)
                 (const Messages__PutResponse *message,
                  void *closure_data);
typedef void (*Messages__ClientRequest_Closure)
                 (const Messages__ClientRequest *message,
                  void *closure_data);
typedef void (*Messages__ClientResponse_Closure)
                 (const Messages__ClientResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    messages__type__descriptor;
extern const ProtobufCMessageDescriptor messages__get_request__descriptor;
extern const ProtobufCMessageDescriptor messages__get_response__descriptor;
extern const ProtobufCMessageDescriptor messages__put_request__descriptor;
extern const ProtobufCMessageDescriptor messages__put_response__descriptor;
extern const ProtobufCMessageDescriptor messages__client_request__descriptor;
extern const ProtobufCMessageDescriptor messages__client_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_2eproto__INCLUDED */
